[project]
name = "elastic-AI-protocol"
description = "elastic-AI protocol implementation"
dynamic = ["version"]
authors = [{ name = "Department Intelligent Embedded Systems - University Duisburg-Essen" }]
maintainers = [{ name = "David P. Federl", email = "david-peter.federl@uni-due.de" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "paho-mqtt>=2.1.0",
]

[dependency-groups]
pre-commit = [
    "pre-commit==4.1.0",
]
dev = [
    "coverage>=7.8.0",
    "hatch>=1.14.1",
    "hatch-vcs>=0.4.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
]
lint = [
    "mypy>=1.15.0",
    "rope>=1.13.0",
    "ruff>=0.11.8",
]
lsp = [
    "pylsp-mypy>=0.7.0",
    "pylsp-rope>=0.1.17",
    "python-lsp-ruff>=2.2.2",
    "python-lsp-server>=1.12.2",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["Python/elasticai","Python/elasticai-stubs" ,  "Python/mqtt", "Python/mqtt-stubs"]
exclude = [
    "*_test.py",
]

[tool.hatch.version]
source = "vcs"

[tool.pytest.ini_options]
testpaths = ["Python/elasticai/", "Python/mqtt/", "Python/tests/"]
python_files = ["*_test.py"]
addopts = "--import-mode=importlib"

[tool.coverage.report]
exclude_also = [
    # ignore Interface classes
    'metaclass=(abc\.)?ABCMeta',
    '@(abc\.)?abstractmethod',
]

[tool.ruff]
exclude = [
    ".ipynp",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py311"


[tool.ruff.lint]
select = [
    "F", # pyflakes
    "B", # flake8-bugbear
    "E", # pycodestyle
    "D", # pydocstyle
    "I", # isort
    "ANN", # flake8 type annotations
    "RUF", # ruff-specific rules
]
ignore = [
    "ANN401" # allow Any as type
]
unfixable = ["B"]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = false

[tool.ruff.lint.per-file-ignores]
"*_test.py" = ["D", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"
